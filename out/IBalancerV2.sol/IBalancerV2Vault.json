{"abi":[{"type":"function","name":"exitPool","inputs":[{"name":"poolId","type":"bytes32","internalType":"bytes32"},{"name":"sender","type":"address","internalType":"address"},{"name":"recipient","type":"address","internalType":"address"},{"name":"request","type":"tuple","internalType":"struct IBalancerV2Vault.ExitPoolRequest","components":[{"name":"assets","type":"address[]","internalType":"contract IAsset[]"},{"name":"minAmountsOut","type":"uint256[]","internalType":"uint256[]"},{"name":"userData","type":"bytes","internalType":"bytes"},{"name":"toInternalBalance","type":"bool","internalType":"bool"}]}],"outputs":[{"name":"","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"joinPool","inputs":[{"name":"poolId","type":"bytes32","internalType":"bytes32"},{"name":"sender","type":"address","internalType":"address"},{"name":"recipient","type":"address","internalType":"address"},{"name":"request","type":"tuple","internalType":"struct IBalancerV2Vault.JoinPoolRequest","components":[{"name":"assets","type":"address[]","internalType":"contract IAsset[]"},{"name":"maxAmountsIn","type":"uint256[]","internalType":"uint256[]"},{"name":"userData","type":"bytes","internalType":"bytes"},{"name":"fromInternalBalance","type":"bool","internalType":"bool"}]}],"outputs":[{"name":"","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"payable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"exitPool(bytes32,address,address,(address[],uint256[],bytes,bool))":"8bdb3913","joinPool(bytes32,address,address,(address[],uint256[],bytes,bool))":"b95cac28"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IAsset[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"minAmountsOut\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"toInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IBalancerV2Vault.ExitPoolRequest\",\"name\":\"request\",\"type\":\"tuple\"}],\"name\":\"exitPool\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IAsset[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"maxAmountsIn\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"fromInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IBalancerV2Vault.JoinPoolRequest\",\"name\":\"request\",\"type\":\"tuple\"}],\"name\":\"joinPool\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for interaction with Balancer V2 vault\",\"kind\":\"dev\",\"methods\":{\"exitPool(bytes32,address,address,(address[],uint256[],bytes,bool))\":{\"details\":\"Exits a pool, removing liquidity\",\"params\":{\"poolId\":\"The ID of the pool to exit\",\"recipient\":\"The address of the recipient of the returned tokens\",\"request\":\"Exit request parameters containing assets, amounts, and user data\",\"sender\":\"The address of the sender of the BPT\"},\"returns\":{\"_0\":\"The amounts of tokens withdrawn\"}},\"joinPool(bytes32,address,address,(address[],uint256[],bytes,bool))\":{\"details\":\"Joins a pool, adding liquidity\",\"params\":{\"poolId\":\"The ID of the pool to join\",\"recipient\":\"The address of the recipient of the BPT\",\"request\":\"Join request parameters containing assets, amounts, and user data\",\"sender\":\"The address of the sender of the assets\"},\"returns\":{\"_0\":\"The amounts of BPT minted\"}}},\"title\":\"IBalancerV2Vault\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IBalancerV2.sol\":\"IBalancerV2Vault\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"src/interfaces/IBalancerV2.sol\":{\"keccak256\":\"0xc5f0e84f71cf92b3fa436f93b4c83da13b47477f0cae70aec1a5db30eee8d59a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0fad89197907a9c0755a301ff22881f2fbd3a5e7edaa610bbd89d672cc80fddb\",\"dweb:/ipfs/Qmb93FRiRME8Mp3rAkEjVRnt9KjmeF8w7nnwHGBKiVRBPF\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.27+commit.40a35a09"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"bytes32","name":"poolId","type":"bytes32"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"struct IBalancerV2Vault.ExitPoolRequest","name":"request","type":"tuple","components":[{"internalType":"contract IAsset[]","name":"assets","type":"address[]"},{"internalType":"uint256[]","name":"minAmountsOut","type":"uint256[]"},{"internalType":"bytes","name":"userData","type":"bytes"},{"internalType":"bool","name":"toInternalBalance","type":"bool"}]}],"stateMutability":"nonpayable","type":"function","name":"exitPool","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}]},{"inputs":[{"internalType":"bytes32","name":"poolId","type":"bytes32"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"struct IBalancerV2Vault.JoinPoolRequest","name":"request","type":"tuple","components":[{"internalType":"contract IAsset[]","name":"assets","type":"address[]"},{"internalType":"uint256[]","name":"maxAmountsIn","type":"uint256[]"},{"internalType":"bytes","name":"userData","type":"bytes"},{"internalType":"bool","name":"fromInternalBalance","type":"bool"}]}],"stateMutability":"payable","type":"function","name":"joinPool","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}]}],"devdoc":{"kind":"dev","methods":{"exitPool(bytes32,address,address,(address[],uint256[],bytes,bool))":{"details":"Exits a pool, removing liquidity","params":{"poolId":"The ID of the pool to exit","recipient":"The address of the recipient of the returned tokens","request":"Exit request parameters containing assets, amounts, and user data","sender":"The address of the sender of the BPT"},"returns":{"_0":"The amounts of tokens withdrawn"}},"joinPool(bytes32,address,address,(address[],uint256[],bytes,bool))":{"details":"Joins a pool, adding liquidity","params":{"poolId":"The ID of the pool to join","recipient":"The address of the recipient of the BPT","request":"Join request parameters containing assets, amounts, and user data","sender":"The address of the sender of the assets"},"returns":{"_0":"The amounts of BPT minted"}}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@openzeppelin/=lib/openzeppelin-contracts/","ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/interfaces/IBalancerV2.sol":"IBalancerV2Vault"},"evmVersion":"cancun","libraries":{}},"sources":{"src/interfaces/IBalancerV2.sol":{"keccak256":"0xc5f0e84f71cf92b3fa436f93b4c83da13b47477f0cae70aec1a5db30eee8d59a","urls":["bzz-raw://0fad89197907a9c0755a301ff22881f2fbd3a5e7edaa610bbd89d672cc80fddb","dweb:/ipfs/Qmb93FRiRME8Mp3rAkEjVRnt9KjmeF8w7nnwHGBKiVRBPF"],"license":"MIT"}},"version":1},"id":40}